plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.diffplug.guava:guava-concurrent:19.0.0'
    implementation 'org.projectlombok:lombok:1.18.20'
    implementation 'org.aspectj:aspectjweaver:1.9.8.M1'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation 'org.springframework.data:spring-data-redis:2.5.3'
    implementation 'org.mybatis:mybatis:3.5.7'
    implementation 'org.mybatis:mybatis-spring:2.0.6'
    implementation 'com.alibaba:druid:1.2.6'
    implementation 'org.springframework.boot:spring-boot-starter-aop:2.5.3'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.5.3'
    implementation 'org.ops4j.pax.jdbc:pax-jdbc-mysql:1.5.1'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-cache:2.5.0'
    implementation 'net.sf.ehcache:ehcache:2.10.9.2'
    implementation 'org.springframework:spring-context:5.3.9'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.4.3.1'
    implementation 'org.springframework.amqp:spring-amqp:2.3.9'
    implementation 'org.springframework.amqp:spring-rabbit:2.3.9'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.5.4'
    implementation 'org.springframework.kafka:spring-kafka:2.7.6'
}

test {
    useJUnitPlatform()
}

task 'create-dirs' {
    doLast {
        sourceSets*.java.srcDirs*.each {
            it.mkdirs()
        }
        sourceSets*.resources.srcDirs*.each {
            it.mkdirs()
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}